<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." name="dita-for-small-teams">
  
  <property name="workspace-dir" location="${basedir}/.."/>
  <property name="dist-dir" location="${basedir}/dist"/>
  <property name="dist-dfst-docker-ghpages-dirname" value="dfst-docker-ghpages"/>
  <property name="dist-dfst-docker-ghpages-dir" location="${workspace-dir}/${dist-dfst-docker-ghpages-dirname}"/>
  <property name="dist-dfst-project-gitio-dirname" value="dita-for-small-teams.github.io"/>
  <property name="dist-dfst-project-gitio-dir" location="${workspace-dir}/${dist-dfst-project-gitio-dirname}"/>
  <property name="release-dir" location="${basedir}/releases"/>
  <property name="dfst-dir" location="${basedir}/dfst-docker"/>
  <property name="dfst-docs-dir" location="${basedir}/dfst-docker/docs"/>
  <property name="dfst-project-docs-dir" location="${basedir}/documentation"/>
  <property name="version" value="0-9-3"/>
  
  <echo>workspace-dir="${workspace-dir}"</echo>
  <echo>dist-dfst-project-gitio-dir="${dist-dfst-project-gitio-dir}"</echo>
  
  <tstamp/>
  
  <target name="dist" description="Create distribution package locally">
    <delete includeemptydirs="true">
      <fileset dir="${dist-dir}/dfst-docker">
        <include name="**/*" />
      </fileset>
    </delete>
    <copy todir="${dist-dir}/dfst-docker">
      <fileset dir="${dfst-dir}">
        <include name="dfst"/>
        <include name="README.md"/>
        <include name="LICENSE"/>
        <include name="containers/**/*"/>
        <exclude name="containers/sandbox"/>
      </fileset>
    </copy>
  </target>
  
  <target name="release" depends="dist" description="Make a release Zip for the distribution">
    <zip destfile="${release-dir}/dfst-docker-${version}.zip">
      <fileset dir="${dist-dir}">
        <include name="*/**"/>
      </fileset>
    </zip>
  </target>
  
  <target name="check-dfst-docker-doc-source-changed">
    <uptodate property="dfst-docker-docs-modified">
      <srcfiles dir="${dfst-docs-dir}">
        <include name="**/*" />
        <exclude name="out/**"/>
        <exclude name="temp/**"/>
      </srcfiles>
      <identitymapper/>
    </uptodate>
    <echo>dfst-docs-modified="${dfst-docker-docs-modified}"</echo>
  </target>

  <target name="check-dfst-project-doc-source-changed">
    <uptodate property="dfst-project-doc-source-modified">
      <srcfiles dir="${dfst-project-docs-dir}">
        <include name="**/*" />
        <exclude name="out/**"/>
        <exclude name="temp/**"/>
      </srcfiles>
      <identitymapper/>
    </uptodate>
    <echo>dfst-doc-source-modified="${dfst-project-doc-source-modified}"</echo>
  </target>
  
  <target name="generate-dfst-docker-docs" depends="check-dfst-docker-doc-source-changed" if="${dfst-docker-docs-modified}" 
    description="Generate renditions of the DFST Docker documentation"
    >
    <!-- 
      docker run -v /Users/ekimber/workspace-dfst:/opt/dita-ot/data dfst/dita-ot  
      ant -Dargs.input=/opt/dita-ot/data/dita-for-small-teams/dfst-docker/docs/dfst-docker-guide.ditamap  
      -Dtranstype=d4p-html5   
      -Doutput.dir=/opt/dita-ot/data/dfst-docker-ghpages
      -->
    <exec  
      searchpath="true"
      executable="docker"
      failonerror="true"
      >
      <arg value="run"/>
      <arg value="-v"/>
      <arg value="${workspace-dir}:/opt/dita-ot/data"/>
      <arg value="dfst/dita-ot"/>
      <arg value="ant"/>
      <arg value="-Dargs.input=/opt/dita-ot/data/dita-for-small-teams/dfst-docker/docs/dfst-docker-guide.ditamap"/>
      <arg value="-Dtranstype=d4p-html5"/>
      <arg value="-Doutput.dir=/opt/dita-ot/data/dfst-docker-ghpages"/>
    </exec>
  </target>
 
  <target name="generate-dfst-project-docs" depends="check-dfst-project-doc-source-changed" if="${dfst-project-doc-source-modified}" 
    description="Generate renditions of the DFST project documentation"
    >
    <echo>Generating DFST project documentation...</echo>
    <exec  
      searchpath="true"
      executable="docker"
      failonerror="true"
      >
      <arg value="run"/>
      <arg value="-v"/>
      <arg value="${workspace-dir}:/opt/dita-ot/data"/>
      <arg value="dfst/dita-ot"/>
      <arg value="ant"/>
      <arg value="-Dargs.input=/opt/dita-ot/data/dita-for-small-teams/documentation/dita-for-small-teams.ditamap"/>
      <arg value="-Dtranstype=d4p-html5"/>
      <arg value="-Doutput.dir=/opt/dita-ot/data/${dist-dfst-project-gitio-dirname}"/>
    </exec>
  </target>
  
  <target name="publish-dfst-docker-docs" depends="generate-dfst-docker-docs"
    description="Generate the DFST Docker docs and publish to GitHub"
    >
    <!-- Do git commit and push of the generated docs -->
    <exec searchpath="true"
      executable="git"
      failonerror="true"
      dir="${dist-dfst-docker-ghpages-dir}"
      >
      <arg value="pull"/>      
    </exec>
    <exec searchpath="true"
      executable="git"
      failonerror="true"
      dir="${dist-dfst-docker-ghpages-dir}"
      >
      <arg value="add"/>      
      <arg value="-A"/>      
    </exec>
    <exec searchpath="true"
      executable="git"
      failonerror="true"
      dir="${dist-dfst-docker-ghpages-dir}"
      >
      <arg value="commit"/>      
      <arg value="-m"/>      
      <arg value="Documentation updated via Ant process on ${TODAY} by ${user.name}"/>      
    </exec>
    <exec searchpath="true"
      executable="git"
      failonerror="true"
      dir="${dist-dfst-docker-ghpages-dir}"
      >
      <arg value="push"/>      
      <arg value="origin"/>      
      <arg value="gh-pages"/>      
    </exec>
  </target>

  <target name="publish-dfst-project-docs" depends="generate-dfst-project-docs"
    description="Generate the DFST project docs and publish to GitHub"
    >
    <!-- Do git commit and push of the generated docs -->
    <exec searchpath="true"
      executable="git"
      failonerror="true"
      dir="${dist-dfst-project-gitio-dir}"
      >
      <arg value="pull"/>      
    </exec>
    <exec searchpath="true"
      executable="git"
      failonerror="true"
      dir="${dist-dfst-project-gitio-dir}"
      >
      <arg value="add"/>      
      <arg value="-A"/>      
    </exec>
    <exec searchpath="true"
      executable="git"
      failonerror="true"
      dir="${dist-dfst-project-gitio-dir}"
      >
      <arg value="commit"/>      
      <arg value="-m"/>      
      <arg value="Documentation updated via Ant process on ${TODAY} by ${user.name}"/>      
    </exec>
    <exec searchpath="true"
      executable="git"
      failonerror="true"
      dir="${dist-dfst-project-gitio-dir}"
      >
      <arg value="push"/>      
      <arg value="origin"/>      
      <arg value="master"/>      
    </exec>
  </target>
</project>
